{"ast":null,"code":"import toast from 'react-hot-toast';\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exist = toast.error(\"Password does not match\");\n  }\n  return errors;\n}\n\n/** validate register form */\nexport async function registerValidation(values) {\n  const errors = usernameVerify({}, values);\n  passwordVerify(errors, values);\n  emailVerify(errors, values);\n  return errors;\n}\n/** validate profile page */\nexport async function profileValidation(values) {\n  const errors = emailVerify({}, values);\n  return errors;\n}\nfunction passwordVerify(error = {}, values) {\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    error.password = toast.error('Password required');\n  } else if (values.password.includes(\" \")) {\n    error.password = toast.error('Invalid password');\n  } else if (values.password < 5) {\n    error.password = toast.error('Password is too short');\n  } else if (!specialChars.test(values.password)) {\n    error.password = toast.error(\"Password must have special character\");\n  }\n  return error;\n}\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error('Username required...!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Username is not valid...!');\n  }\n  return error;\n}\n/** validate email */\nfunction emailVerify(error = {}, values) {\n  if (!values.email) {\n    error.email = toast.error(\"Email Required...!\");\n  } else if (values.email.includes(\" \")) {\n    error.email = toast.error(\"Wrong Email...!\");\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    error.email = toast.error(\"Invalid email address...!\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","exist","error","registerValidation","emailVerify","profileValidation","specialChars","includes","test","username","email"],"sources":["C:/Users/sakin/OneDrive/Documents/Sheria/login/client/src/helper/validate.js"],"sourcesContent":["import toast from 'react-hot-toast'\r\n\r\nexport async function usernameValidate(values){\r\n    const errors = usernameVerify( {}, values);\r\n\r\n    return errors;\r\n}\r\n\r\nexport async function passwordValidate(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    return errors;\r\n}\r\n\r\nexport async function resetPasswordValidation(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    if(values.password !== values.confirm_pwd){\r\n        errors.exist = toast.error(\"Password does not match\");\r\n    }\r\n    return errors;\r\n}\r\n\r\n/** validate register form */\r\nexport async function registerValidation(values){\r\n    const errors = usernameVerify({}, values);\r\n    passwordVerify(errors, values);\r\n    emailVerify(errors, values);\r\n\r\n    return errors;\r\n}\r\n/** validate profile page */\r\nexport async function profileValidation(values){\r\n    const errors = emailVerify({}, values);\r\n    return errors;\r\n}\r\nfunction passwordVerify(error = {}, values){\r\n\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    if(!values.password){\r\n        error.password = toast.error('Password required')\r\n    } else if( values.password.includes(\" \")){\r\n        error.password = toast.error('Invalid password')\r\n    } else if( values.password<5){\r\n        error.password = toast.error('Password is too short')\r\n    }else if(!specialChars.test(values.password)){\r\n        error.password = toast.error(\"Password must have special character\");\r\n    }\r\n\r\n    return error;\r\n\r\n}\r\nfunction usernameVerify(error = {}, values){\r\n    if(!values.username){\r\n        error.username = toast.error('Username required...!')\r\n    } else if(values.username.includes(\" \")){\r\n        error.username = toast.error('Username is not valid...!')\r\n    }\r\n    return error;\r\n\r\n}\r\n/** validate email */\r\nfunction emailVerify(error ={}, values){\r\n    if(!values.email){\r\n        error.email = toast.error(\"Email Required...!\");\r\n    }else if(values.email.includes(\" \")){\r\n        error.email = toast.error(\"Wrong Email...!\")\r\n    }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\r\n        error.email = toast.error(\"Invalid email address...!\")\r\n    }\r\n\r\n    return error;\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAEnC,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAAGC,cAAc,CAAE,CAAC,CAAC,EAAEF,MAAM,CAAC;EAE1C,OAAOC,MAAM;AACjB;AAEA,OAAO,eAAeE,gBAAgBA,CAACH,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAAGG,cAAc,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAAC;EAEzC,OAAOC,MAAM;AACjB;AAEA,OAAO,eAAeI,uBAAuBA,CAACL,MAAM,EAAC;EACjD,MAAMC,MAAM,GAAGG,cAAc,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAAC;EAEzC,IAAGA,MAAM,CAACM,QAAQ,KAAKN,MAAM,CAACO,WAAW,EAAC;IACtCN,MAAM,CAACO,KAAK,GAAGV,KAAK,CAACW,KAAK,CAAC,yBAAyB,CAAC;EACzD;EACA,OAAOR,MAAM;AACjB;;AAEA;AACA,OAAO,eAAeS,kBAAkBA,CAACV,MAAM,EAAC;EAC5C,MAAMC,MAAM,GAAGC,cAAc,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EACzCI,cAAc,CAACH,MAAM,EAAED,MAAM,CAAC;EAC9BW,WAAW,CAACV,MAAM,EAAED,MAAM,CAAC;EAE3B,OAAOC,MAAM;AACjB;AACA;AACA,OAAO,eAAeW,iBAAiBA,CAACZ,MAAM,EAAC;EAC3C,MAAMC,MAAM,GAAGU,WAAW,CAAC,CAAC,CAAC,EAAEX,MAAM,CAAC;EACtC,OAAOC,MAAM;AACjB;AACA,SAASG,cAAcA,CAACK,KAAK,GAAG,CAAC,CAAC,EAAET,MAAM,EAAC;EAEvC,MAAMa,YAAY,GAAG,yCAAyC;EAC9D,IAAG,CAACb,MAAM,CAACM,QAAQ,EAAC;IAChBG,KAAK,CAACH,QAAQ,GAAGR,KAAK,CAACW,KAAK,CAAC,mBAAmB,CAAC;EACrD,CAAC,MAAM,IAAIT,MAAM,CAACM,QAAQ,CAACQ,QAAQ,CAAC,GAAG,CAAC,EAAC;IACrCL,KAAK,CAACH,QAAQ,GAAGR,KAAK,CAACW,KAAK,CAAC,kBAAkB,CAAC;EACpD,CAAC,MAAM,IAAIT,MAAM,CAACM,QAAQ,GAAC,CAAC,EAAC;IACzBG,KAAK,CAACH,QAAQ,GAAGR,KAAK,CAACW,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAK,IAAG,CAACI,YAAY,CAACE,IAAI,CAACf,MAAM,CAACM,QAAQ,CAAC,EAAC;IACzCG,KAAK,CAACH,QAAQ,GAAGR,KAAK,CAACW,KAAK,CAAC,sCAAsC,CAAC;EACxE;EAEA,OAAOA,KAAK;AAEhB;AACA,SAASP,cAAcA,CAACO,KAAK,GAAG,CAAC,CAAC,EAAET,MAAM,EAAC;EACvC,IAAG,CAACA,MAAM,CAACgB,QAAQ,EAAC;IAChBP,KAAK,CAACO,QAAQ,GAAGlB,KAAK,CAACW,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAM,IAAGT,MAAM,CAACgB,QAAQ,CAACF,QAAQ,CAAC,GAAG,CAAC,EAAC;IACpCL,KAAK,CAACO,QAAQ,GAAGlB,KAAK,CAACW,KAAK,CAAC,2BAA2B,CAAC;EAC7D;EACA,OAAOA,KAAK;AAEhB;AACA;AACA,SAASE,WAAWA,CAACF,KAAK,GAAE,CAAC,CAAC,EAAET,MAAM,EAAC;EACnC,IAAG,CAACA,MAAM,CAACiB,KAAK,EAAC;IACbR,KAAK,CAACQ,KAAK,GAAGnB,KAAK,CAACW,KAAK,CAAC,oBAAoB,CAAC;EACnD,CAAC,MAAK,IAAGT,MAAM,CAACiB,KAAK,CAACH,QAAQ,CAAC,GAAG,CAAC,EAAC;IAChCL,KAAK,CAACQ,KAAK,GAAGnB,KAAK,CAACW,KAAK,CAAC,iBAAiB,CAAC;EAChD,CAAC,MAAK,IAAG,CAAC,2CAA2C,CAACM,IAAI,CAACf,MAAM,CAACiB,KAAK,CAAC,EAAC;IACrER,KAAK,CAACQ,KAAK,GAAGnB,KAAK,CAACW,KAAK,CAAC,2BAA2B,CAAC;EAC1D;EAEA,OAAOA,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}