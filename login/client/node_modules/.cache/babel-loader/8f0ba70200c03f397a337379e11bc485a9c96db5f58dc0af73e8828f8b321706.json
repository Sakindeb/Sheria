{"ast":null,"code":"import toast from 'react-hot-toast';\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\nfunction passwordVerify(error = {}, values) {\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    error.password = toast.error('Password required');\n  } else if (values.password.include(\" \")) {\n    error.password = toast.error('Invalid password');\n  } else if (values.password < 5) {\n    error.password = toast.error('Password is too short');\n  } else if (!specialChars.test(values.password)) {\n    error.password = toast.error(\"Password must have special character\");\n  }\n  return errors;\n}\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error('Username required...!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Username is not valid...!');\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordVerify","error","specialChars","password","include","test","username","includes"],"sources":["C:/Users/sakin/OneDrive/Documents/Sheria/login/client/src/helper/validate.js"],"sourcesContent":["import toast from 'react-hot-toast'\r\n\r\nexport async function usernameValidate(values){\r\n    const errors = usernameVerify( {}, values);\r\n\r\n    return errors;\r\n}\r\n\r\nfunction passwordVerify(error = {}, values){\r\n\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    if(!values.password){\r\n        error.password = toast.error('Password required')\r\n    } else if( values.password.include(\" \")){\r\n        error.password = toast.error('Invalid password')\r\n    } else if( values.password<5){\r\n        error.password = toast.error('Password is too short')\r\n    }else if(!specialChars.test(values.password)){\r\n        error.password = toast.error(\"Password must have special character\");\r\n    }\r\n\r\n    return errors;\r\n\r\n}\r\nfunction usernameVerify(error = {}, values){\r\n    if(!values.username){\r\n        error.username = toast.error('Username required...!')\r\n    } else if(values.username.includes(\" \")){\r\n        error.username = toast.error('Username is not valid...!')\r\n    }\r\n    return error;\r\n\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAEnC,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAAGC,cAAc,CAAE,CAAC,CAAC,EAAEF,MAAM,CAAC;EAE1C,OAAOC,MAAM;AACjB;AAEA,SAASE,cAAcA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAEJ,MAAM,EAAC;EAEvC,MAAMK,YAAY,GAAG,yCAAyC;EAC9D,IAAG,CAACL,MAAM,CAACM,QAAQ,EAAC;IAChBF,KAAK,CAACE,QAAQ,GAAGR,KAAK,CAACM,KAAK,CAAC,mBAAmB,CAAC;EACrD,CAAC,MAAM,IAAIJ,MAAM,CAACM,QAAQ,CAACC,OAAO,CAAC,GAAG,CAAC,EAAC;IACpCH,KAAK,CAACE,QAAQ,GAAGR,KAAK,CAACM,KAAK,CAAC,kBAAkB,CAAC;EACpD,CAAC,MAAM,IAAIJ,MAAM,CAACM,QAAQ,GAAC,CAAC,EAAC;IACzBF,KAAK,CAACE,QAAQ,GAAGR,KAAK,CAACM,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAK,IAAG,CAACC,YAAY,CAACG,IAAI,CAACR,MAAM,CAACM,QAAQ,CAAC,EAAC;IACzCF,KAAK,CAACE,QAAQ,GAAGR,KAAK,CAACM,KAAK,CAAC,sCAAsC,CAAC;EACxE;EAEA,OAAOH,MAAM;AAEjB;AACA,SAASC,cAAcA,CAACE,KAAK,GAAG,CAAC,CAAC,EAAEJ,MAAM,EAAC;EACvC,IAAG,CAACA,MAAM,CAACS,QAAQ,EAAC;IAChBL,KAAK,CAACK,QAAQ,GAAGX,KAAK,CAACM,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAM,IAAGJ,MAAM,CAACS,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAC;IACpCN,KAAK,CAACK,QAAQ,GAAGX,KAAK,CAACM,KAAK,CAAC,2BAA2B,CAAC;EAC7D;EACA,OAAOA,KAAK;AAEhB"},"metadata":{},"sourceType":"module","externalDependencies":[]}