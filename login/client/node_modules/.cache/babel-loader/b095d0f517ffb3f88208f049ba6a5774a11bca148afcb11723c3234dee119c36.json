{"ast":null,"code":"import toast from 'react-hot-toast';\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    error.exist = toast.error(\"Password does\");\n  }\n}\nfunction passwordVerify(error = {}, values) {\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    error.password = toast.error('Password required');\n  } else if (values.password.includes(\" \")) {\n    error.password = toast.error('Invalid password');\n  } else if (values.password < 5) {\n    error.password = toast.error('Password is too short');\n  } else if (!specialChars.test(values.password)) {\n    error.password = toast.error(\"Password must have special character\");\n  }\n  return error;\n}\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error('Username required...!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Username is not valid...!');\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","error","exist","specialChars","includes","test","username"],"sources":["C:/Users/sakin/OneDrive/Documents/Sheria/login/client/src/helper/validate.js"],"sourcesContent":["import toast from 'react-hot-toast'\r\n\r\nexport async function usernameValidate(values){\r\n    const errors = usernameVerify( {}, values);\r\n\r\n    return errors;\r\n}\r\n\r\nexport async function passwordValidate(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    return errors;\r\n}\r\n\r\nexport async function resetPasswordValidation(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    if(values.password !== values.confirm_pwd){\r\n        error.exist = toast.error(\"Password does\")\r\n    }\r\n\r\n}\r\n\r\nfunction passwordVerify(error = {}, values){\r\n\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    if(!values.password){\r\n        error.password = toast.error('Password required')\r\n    } else if( values.password.includes(\" \")){\r\n        error.password = toast.error('Invalid password')\r\n    } else if( values.password<5){\r\n        error.password = toast.error('Password is too short')\r\n    }else if(!specialChars.test(values.password)){\r\n        error.password = toast.error(\"Password must have special character\");\r\n    }\r\n\r\n    return error;\r\n\r\n}\r\nfunction usernameVerify(error = {}, values){\r\n    if(!values.username){\r\n        error.username = toast.error('Username required...!')\r\n    } else if(values.username.includes(\" \")){\r\n        error.username = toast.error('Username is not valid...!')\r\n    }\r\n    return error;\r\n\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAEnC,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAAGC,cAAc,CAAE,CAAC,CAAC,EAAEF,MAAM,CAAC;EAE1C,OAAOC,MAAM;AACjB;AAEA,OAAO,eAAeE,gBAAgBA,CAACH,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAAGG,cAAc,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAAC;EAEzC,OAAOC,MAAM;AACjB;AAEA,OAAO,eAAeI,uBAAuBA,CAACL,MAAM,EAAC;EACjD,MAAMC,MAAM,GAAGG,cAAc,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAAC;EAEzC,IAAGA,MAAM,CAACM,QAAQ,KAAKN,MAAM,CAACO,WAAW,EAAC;IACtCC,KAAK,CAACC,KAAK,GAAGX,KAAK,CAACU,KAAK,CAAC,eAAe,CAAC;EAC9C;AAEJ;AAEA,SAASJ,cAAcA,CAACI,KAAK,GAAG,CAAC,CAAC,EAAER,MAAM,EAAC;EAEvC,MAAMU,YAAY,GAAG,yCAAyC;EAC9D,IAAG,CAACV,MAAM,CAACM,QAAQ,EAAC;IAChBE,KAAK,CAACF,QAAQ,GAAGR,KAAK,CAACU,KAAK,CAAC,mBAAmB,CAAC;EACrD,CAAC,MAAM,IAAIR,MAAM,CAACM,QAAQ,CAACK,QAAQ,CAAC,GAAG,CAAC,EAAC;IACrCH,KAAK,CAACF,QAAQ,GAAGR,KAAK,CAACU,KAAK,CAAC,kBAAkB,CAAC;EACpD,CAAC,MAAM,IAAIR,MAAM,CAACM,QAAQ,GAAC,CAAC,EAAC;IACzBE,KAAK,CAACF,QAAQ,GAAGR,KAAK,CAACU,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAK,IAAG,CAACE,YAAY,CAACE,IAAI,CAACZ,MAAM,CAACM,QAAQ,CAAC,EAAC;IACzCE,KAAK,CAACF,QAAQ,GAAGR,KAAK,CAACU,KAAK,CAAC,sCAAsC,CAAC;EACxE;EAEA,OAAOA,KAAK;AAEhB;AACA,SAASN,cAAcA,CAACM,KAAK,GAAG,CAAC,CAAC,EAAER,MAAM,EAAC;EACvC,IAAG,CAACA,MAAM,CAACa,QAAQ,EAAC;IAChBL,KAAK,CAACK,QAAQ,GAAGf,KAAK,CAACU,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAM,IAAGR,MAAM,CAACa,QAAQ,CAACF,QAAQ,CAAC,GAAG,CAAC,EAAC;IACpCH,KAAK,CAACK,QAAQ,GAAGf,KAAK,CAACU,KAAK,CAAC,2BAA2B,CAAC;EAC7D;EACA,OAAOA,KAAK;AAEhB"},"metadata":{},"sourceType":"module","externalDependencies":[]}